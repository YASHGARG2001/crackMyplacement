day 05 
solution 169 
 unordered_map<int, int> hash;
        int res = 0;
        int majority = 0;

        for (int n : nums) {
            hash[n] = 1 + hash[n];
            if (hash[n] > majority) {
                res = n;
                majority = hash[n];
            }
        }

        return res; 
 solution 14
 class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if (strs.empty()) return ""; 
        string ans = "";
        for (int i = 0; i < strs[0].size(); i++) {
            char currentChar = strs[0][i];
            for (int j = 1; j < strs.size(); j++) {
                if (i >= strs[j].size() || strs[j][i] != currentChar) {
                    return ans;
                }
            }
            ans.push_back(currentChar);
        }
        return ans;
        
    }
};
 solution 83
 ListNode *curr=head;

        while(curr!=NULL&& curr->next!=NULL)
        {
            if(curr->val==curr->next->val)
            {
                curr->next=curr->next->next;

            }
            else
            {
                curr=curr->next;
            }
        }
        return head; 
